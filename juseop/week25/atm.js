/**
 * ATM 앞에 1번부터 N번까지 번호가 매겨져 있으며, i번 사람이 돈을 인출하는데 걸리는 시간은 Pi분이다.
 * 사람들이 줄을 서는 순서에 따라서, 돈을 인출하는데 필요한 시간의 합이 다르다.
 * 예를 들어, 총 5명이 있고, P1 = 3, P2 = 1, P3 = 4, P4 = 3, P5 = 2라면, [1, 2, 3, 4, 5] 순서로 줄을 선다면,
 * 1번 사람은 3분, 2번사람은 1번이 돈을 뽑을 때 까지 기다려야 하기 때문에, 3+1 = 4분이 걸리게 된다.
 * 3번 사람은 1번, 2번 사람이 돈을 뽑을 때까지 기다려야하기 때문에, 총 3+1+4= 8분이 필요하게 된다.
 * 4번 살마은 3+1+4+3 = 11분, 5번 사람은 3+1+4+3+2 = 13분이 걸리게 된다. 이 경우 각 사람이 돈을 뽑는데 필요한 시간의 합은 39분
 * 줄을 [2, 5, 1, 4, 3] 순서로 서게되면 2번 사람은 1분만에, 5번 사람은 1+2 = 3분, 1번 사람은 3+3 = 6분, 4번 사람은 6+4 = 10분, 3번 사람은 10+4 = 14분이 걸리게 된다.
 * 각 사람이 돈을 인출하는데 필요한 시간의 합은 32분. 이 방법보다 더 필요한 시간의 합을 최소로 만들 수는 없다.
 * 줄을 서있는 사람 수 N과 각 사람이 돈을 인출하는데 걸리는 시간 Pi가 주어졌을 때, 각 사람이 돈을 인출하는데 필요한 시간의 합과 최솟값을 구하는 프로그램을 작성하시오.
 *
 */

let input = require("fs")
  .readFileSync("/dev/stdin")
  .toString()
  .trim()
  .split("\n");
let N = Number(input[0]);
let P = input[1]
  .split(" ")
  .map(Number)
  .sort((a, b) => a - b);
let totalTime = 0;
let currentTime = 0;
for (let i = 0; i < N; i++) {
  currentTime += P[i];
  totalTime += currentTime;
}
console.log(totalTime);
// 입력 예시: 5\n3 1 4 3 2
