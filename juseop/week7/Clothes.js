/**
 * 코니는 매일 옷을 다르게 입는다.
 * 종류별로 최대 1가지 의상만 착용가능
 * 착용한 의상의 일부가 겹치더라도, 다른의상이 겹치지 않거나, 혹은 의상을 추가로 더 착용한 경우에는 서로 다른 방법으로 옷을 착용한것으로 계산
 * 코니는 하루에 최소 한개의 의상은 입는다.
 * clothes는 의상의 정보가 담긴 2차원 배열가 주어질 때 서로 다른 옷의 조합의 수를 return
 * 의상수는 1개이상 30개 이하
 * 같은이름을 가진 의상은 존재하지 않는다.
 * 모든 원소는 문자열로 이루어져있다.
 */

//각종류별로 몇개의 의상이 있는지 확인
//그 개수를 이용하여 경우의 수를 구해야한다.
//해시의 key와 value를 이용하여 문제를 풀면 될 것 같다..

function solution(clothes) {
  let answer = 1;
  let map = new Map(); // Map 객체 생성

  // 옷 종류별 개수 저장
  for (let [k, v] of clothes) {
    map.set(v, (map.get(v) || 0) + 1);
  } //

  // 조합의 수 계산
  for (let count of map.values()) {
    answer *= count + 1;
  }

  return answer - 1; // 아무것도 입지 않는 경우 제외
}

//clothes 배열에서 각 요소의 종류(v)를 key로 하여 map에 저장.
//map.get(v) || 0은 map에 v가 없으면 0을 반환하고 있으면 그 값을 가져오고 해당 종류의 개수를 +1을 한다.
//각 종류별 의상의 개수를 활용하여 착용할 수있는 경우의 수 계산
//count+1을 곱해주는 이유는 해당 종류의 의상을 입지 않는 경우도 포함하기 때문.
