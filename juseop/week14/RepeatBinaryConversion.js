/**
 * 이진 변환 반복하기
 * 0과 1로 이루어진 어떤 문자열 X에 대한 이진변환을 다음과 같이 정의한다.
 * 1. X의 모든 0을 제거한다.
 * 2. X의 길이를 c라고 할 때, X를 "c를 2진법으로 표현한 문자열"로 바꾼다.
 *
 * x="0111010"이라면 x에 이진 변환을 가하면 x="0111010"->"111"->"110"이 된다.
 * 0과 1로 이루어진 문자열 s가 매개변수로 주어진다.
 * s가 "1"이 될때까지 계속해서 s에 이진변환을 가했을 때,
 * 이진 변환의 횟수와 변환과정에서 제거된 모든 0의 개수를 각각배열에 담아 return
 *
 * 입출력예
 * s = "110010101001" => [3, 8]
 * s = "01110" => [3, 3]
 * s = "1111111" => [4, 1]
 */

function solution(s) {
  let answer = [0, 0]; /// 변환 횟수와 제거된 0의 개수를 담을 배열
  let str = s;
  while (str !== "1") {
    answer[0]++; // 변환 횟수 증가
    let zeroCount = str.split("").filter((x) => x === "0").length; // 제거된 0의 개수
    answer[1] += zeroCount; // 제거된 0의 개수 추가
    str = str
      .split("")
      .filter((x) => x !== "0")
      .length.toString(2); // 0 제거 후 길이를 이진수로 변환
  }
  return answer;
}

//1. 문자열에서 0을 모두 제거
//2. 남은 문자열의 길이를 이진수로 변환
//3. 이 과정을 반복하여 "1"이 될 때까지 진행
