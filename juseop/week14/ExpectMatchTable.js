/**
 * 예상 대진표
 * N명의 참가자는 각각 1번부터 N번까지 차례대로 배정받는다.
 * 1번 <-> 2번, 3번 <-> 4번, ... , N-1번 <-> N번
 * 각 게임에서 이긴 사람은 다음 라운드에 진출 가능.
 * 이때, 다음 라운드에 진출할 참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정받는다.
 * 만약 1번 <-> 2번 끼리 겨루는 게임에서 2번이 승리했다면 다음 라운드에서 1번을 부여받고,
 * 3번 <-> 4번에서 겨루는 게임에서 3번이 승리했다면 2번을 부여받는다.
 * 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 궁금.
 * 게임 참가자 수 N, 참가자 번호 A, 경쟁자 번호 B가 주어질 때,
 * 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 return 하는
 * A번 참가자와  B번 참가자는 서로 붙게 되기 전까지 항상 이긴다.
 *
 * 입출력 예
 * n = 8, a = 4, b = 7 => 3
 */

function solution(n, a, b) {
  let answer = 0;
  for (let i = 0; i < n; i++) {
    if (a === b) break;
    a = Math.ceil(a / 2);
    b = Math.ceil(b / 2);
    answer++;
  }
  return answer;
}

// 1. a와 b가 같지 않은 동안 반복문을 돌린다.
// 2. 매 반복마다 a,b를 2로 나눠서 다음 라운드 번호를 갱신한다.
// 3. 라운드 수를 1씩 증가시킴.
// 4. a와 b가 같아지면 반복문을 종료하고 라운드 수를 반환한다.
